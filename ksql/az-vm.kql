resources
| where subscriptionId == "xxxxxxxx"
| where type =~ 'microsoft.compute/virtualmachines'
| extend nics=array_length(properties.networkProfile.networkInterfaces)
| mv-expand nic=properties.networkProfile.networkInterfaces
| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)
| project vmId = id, vmName = name, resourceGroup, vmLocation = location, vmSize = tostring(properties.hardwareProfile.vmSize), vmSku = tostring(properties.storageProfile.imageReference.sku), vmOs = tostring(properties.storageProfile.osDisk.osType), diskSize = tostring(properties.storageProfile.osDisk.diskSizeGB), nicId = tostring(nic.id)
| join kind=leftouter (
    resources
    | where type =~ 'microsoft.network/networkinterfaces'
    | extend ipConfigsCount=array_length(properties.ipConfigurations)
    | mv-expand ipconfig=properties.ipConfigurations
    | where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true' 
    | project nicId = id, publicIpId = tostring(ipconfig.properties.publicIPAddress.id), privateIpAddress = strcat(tostring(ipconfig.properties.privateIPAddress), " (", tostring(ipconfig.properties.privateIPAllocationMethod), ")"))
    on nicId
| join kind=leftouter (resources | where type =~ 'microsoft.network/publicipaddresses' | project publicIpId = id, publicIpAddress = properties.ipAddress) on publicIpId
| project-away nicId, nicId1, publicIpId, publicIpId1

